using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using System.Threading;

using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;

namespace CCP.EveFrontier.SOF.SmartStorageUnitJaerith.Systems.SmartStorageUnitSystem.ContractDefinition
{
    public partial class SmartStorageUnitSystemDeployment : SmartStorageUnitSystemDeploymentBase
    {
        public SmartStorageUnitSystemDeployment() : base(BYTECODE) { }
        public SmartStorageUnitSystemDeployment(string byteCode) : base(byteCode) { }
    }

    public class SmartStorageUnitSystemDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = "0x608060405234801561000f575f80fd5b5061261b8061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610085575f3560e01c80636565559f116100585780636565559f146100f9578063911d1e5a1461012d578063e1af802c14610140578063f8a8fd6d14610148575f80fd5b806301ffc9a714610089578063119df25f146100b157806345ec9354146100d15780635d8be5ae146100e4575b5f80fd5b61009c610097366004611f6e565b61014f565b60405190151581526020015b60405180910390f35b6100b96101e7565b6040516001600160a01b0390911681526020016100a8565b604051601f1936013581526020016100a8565b6100f76100f2366004611fc4565b6101f5565b005b61010c610107366004612010565b6103ad565b6040805167ffffffffffffffff9384168152929091166020830152016100a8565b6100f761013b366004612050565b6103f7565b6100b961083c565b600161009c565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082167fb5dee1270000000000000000000000000000000000000000000000000000000014806101e157507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b5f6101f0610845565b905090565b5f8267ffffffffffffffff1611801561021757505f8167ffffffffffffffff16115b6102685760405162461bcd60e51b815260206004820152601c60248201527f726174696f2063616e6e6f74206265206c6f776572207468616e20310000000060448201526064015b60405180910390fd5b67ffffffffffffffff821661027d8284612096565b67ffffffffffffffff1610156102fb5760405162461bcd60e51b815260206004820152602f60248201527f4f766572666c6f77207769746820726174696f732e2054686520726174696f7360448201527f2061726520746f6f206c617267652e0000000000000000000000000000000000606482015260840161025f565b5f61030585610877565b90505f61031185610877565b6060830151909150158061032757506060810151155b1561039757604080517fbb8f57750000000000000000000000000000000000000000000000000000000081526004810191909152601c60448201527f4974656d206973206e6f742063726561746564206f6e2d636861696e0000000060648201526024810187905260840161025f565b6103a48787878787610949565b50505050505050565b5f806103b985856109f8565b90955093506103c885846120d6565b90505f6103d582856120fc565b9050856103e28683612096565b6103ec9190612124565b925050935093915050565b5f6104028483610a27565b90505f816020015167ffffffffffffffff1611801561042e57505f816040015167ffffffffffffffff16115b61047a5760405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420726174696f00000000000000000000000000000000000000604482015260640161025f565b5f8367ffffffffffffffff16116104d35760405162461bcd60e51b815260206004820152601460248201527f5175616e746974792063616e6e6f742062652030000000000000000000000000604482015260640161025f565b5f6104dc610b10565b6001600160a01b0316636352211e866040518263ffffffff1660e01b815260040161050991815260200190565b6020604051808303815f875af1158015610525573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610549919061214a565b90505f8061056084602001518560400151886103ad565b90925090505f61057082886120fc565b90505f8367ffffffffffffffff16116105cb5760405162461bcd60e51b815260206004820152601b60248201527f4f7574707574207175616e746974792063616e6e6f7420626520300000000000604482015260640161025f565b5f8367ffffffffffffffff161161064a5760405162461bcd60e51b815260206004820152602560248201527f43616c63756c6174656420696e707574207175616e746974792063616e6e6f7460448201527f2062652030000000000000000000000000000000000000000000000000000000606482015260840161025f565b5f6106558988610b75565b6040805160018082528183019092529192505f9190816020015b61069960405180606001604052805f81526020015f6001600160a01b031681526020015f81525090565b81526020019060019003908161066f5790505090506040518060600160405280898152602001876001600160a01b031681526020018467ffffffffffffffff16815250815f815181106106ee576106ee612184565b60209081029190910101526040805160018082528183019092525f91816020015b61073960405180606001604052805f81526020015f6001600160a01b031681526020015f81525090565b81526020019060019003908161070f57905050905060405180606001604052808481526020016107676101e7565b6001600160a01b031681526020018767ffffffffffffffff16815250815f8151811061079557610795612184565b60200260200101819052506107bd8b6107ac6101e7565b836107b5610c30565b929190610ccd565b6107d18b836107ca610c30565b9190610def565b604080518a815267ffffffffffffffff86811660208301528183018690528816606082015290518c916001600160a01b038a16917f4bcc74c9fb0eb0a60c441a04b94455119aa814316d30896a960cf8cebc38ca519181900360800190a35050505050505050505050565b5f6101f0610f0e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcc36013560601c806108745750335b90565b6108a060405180608001604052805f81526020015f81526020015f81526020015f151581525090565b6040805160018082528183019092525f9160208083019080368337019050509050825f1b815f815181106108d6576108d6612184565b60209081029190910101525f808061092e7f7462657665776f726c64000000000000456e746974795265636f72645461626c857e61040020202001000000000000000000000000000000000000000000000000610f17565b92509250925061093f838383610fe1565b9695505050505050565b5f61095584848461102d565b604080516002808252606080830184529394505f939284929190602083019080368337019050509050885f1b815f8151811061099357610993612184565b602002602001018181525050875f1b816001815181106109b5576109b5612184565b60209081029190910101526109ed7f74627465737400000000000000000000526174696f436f6e666967000000000082868686611097565b505050505050505050565b5f805f610a058585611147565b9050610a118186612124565b9250610a1d8185612124565b9150509250929050565b60408051606080820183525f8083526020830181905282840181905283516002808252928101909452919290816020016020820280368337019050509050835f1b815f81518110610a7a57610a7a612184565b602002602001018181525050825f1b81600181518110610a9c57610a9c612184565b60209081029190910101525f8080610af47f74627465737400000000000000000000526174696f436f6e6669670000000000857e30030020080800000000000000000000000000000000000000000000000000610f17565b925092509250610b05838383611175565b979650505050505050565b604080515f808252602082019092525f610b6b7f7462657665776f726c640000000000004465706c6f7961626c65546f6b656e5483837e140100140000000000000000000000000000000000000000000000000000006111ba565b60601c9392505050565b6040805160028082526060820183525f9283929190602083019080368337019050509050835f1b815f81518110610bae57610bae612184565b602002602001018181525050825f1b81600181518110610bd057610bd0612184565b60209081029190910101525f610c277f74627465737400000000000000000000526174696f436f6e666967000000000083837e300300200808000000000000000000000000000000000000000000000000006111ba565b95945050505050565b604080518082019091525f8082526020820152610c6c7f6e73657665776f726c640000000000000000000000000000000000000000000061127c565b610cba576040518060400160405280610c8361083c565b6001600160a01b031681527f657665776f726c64000000000000000000000000000000000000000000000000602090910152919050565b6040518060400160405280610c8361083c565b835f01516001600160a01b0316633ae7af08610d01866020015171ffffffffffffffffffffffffffffffffffff1916611316565b858585604051602401610d16939291906121f1565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f2ce5170200000000000000000000000000000000000000000000000000000000179052517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152610da6929190600401612265565b5f604051808303815f875af1158015610dc1573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610de891908101906122f8565b5050505050565b825f01516001600160a01b0316633ae7af08610e23856020015171ffffffffffffffffffffffffffffffffffff1916611316565b8484604051602401610e3692919061232a565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fdb7aab2b00000000000000000000000000000000000000000000000000000000179052517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152610ec6929190600401612265565b5f604051808303815f875af1158015610ee1573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610f0891908101906122f8565b50505050565b5f6101f0611362565b60605f60605f610f25611362565b9050306001600160a01b03821603610f4e57610f428787876113a0565b93509350935050610fd8565b6040517f419b58fd0000000000000000000000000000000000000000000000000000000081526001600160a01b0382169063419b58fd90610f97908a908a908a90600401612371565b5f60405180830381865afa158015610fb1573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610f429190810190612399565b93509350939050565b61100a60405180608001604052805f81526020015f81526020015f81526020015f151581525090565b611013846114a1565b151560608501526040840152602083015281529392505050565b606083838360405160200161107e9392919092835260c091821b7fffffffffffffffff0000000000000000000000000000000000000000000000009081166020850152911b16602882015260300190565b60405160208183030381529060405290505b9392505050565b5f6110a0611362565b9050306001600160a01b038216036110c4576110bf86868686866114d5565b61113f565b6040517f298314fb0000000000000000000000000000000000000000000000000000000081526001600160a01b0382169063298314fb906111119089908990899089908990600401612401565b5f604051808303815f87803b158015611128575f80fd5b505af115801561113a573d5f803e3d5ffd5b505050505b505050505050565b5f5b67ffffffffffffffff82161561116e578161116481856120d6565b9093509150611149565b5090919050565b604080516060810182525f808252602082018190529181019190915261119a846114eb565b67ffffffffffffffff908116604085015216602083015281529392505050565b5f806111c4611362565b9050306001600160a01b038216036111ea576111e286868686611519565b915050611274565b6040517f8c364d590000000000000000000000000000000000000000000000000000000081526001600160a01b03821690638c364d5990611235908990899089908990600401612451565b602060405180830381865afa158015611250573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111e2919061247f565b949350505050565b6040805160018082528183019092525f918291906020808301908036833701905050905082815f815181106112b3576112b3612184565b60209081029190910101525f61130a7f746273746f72650000000000000000005265736f75726365496473000000000083837e010100010000000000000000000000000000000000000000000000000000006111ba565b90506112748160f81c90565b5f6101e17f7379000000000000000000000000000000000000000000000000000000000000837f496e76656e746f7279496e746572616300000000000000000000000000000000611545565b7f629a4c26e296b22a8e0856e9f6ecb2d1008d7e00081111962cd175fa7488e175545f906001600160a01b03168061139b573391505090565b919050565b60605f60605f6113af856115cb565b90506113bc8787836115ed565b93505f6113c886611622565b90508015611496576113da888861165e565b935066ffffffffffffff841667ffffffffffffffff8111156113fe576113fe612170565b6040519080825280601f01601f191660200182016040528015611428576020820181803683370190505b509250602083015f5b828160ff161015611493575f6114488b8b84611670565b90505f611464888460ff166028026038011c64ffffffffff1690565b9050611472825f83876116ee565b61147c8185612496565b93505050808061148b906124a9565b915050611431565b50505b505093509350939050565b5f805f806114b2855f016020015190565b604086015160608701516080880151929650909450925060f81c90509193509193565b610de885858585856114e68b6117b5565b611838565b5f805f6114fb845f016020015190565b6040850151604886015191945060c01c925060c01c90509193909250565b5f610c276115278686611b5a565b60ff858116601b0360080285901c166115408587611baf565b611be7565b5f61155260706010612496565b7fffff00000000000000000000000000000000000000000000000000000000000085167dffffffffffffffffffffffffffff00000000000000000000000000000000601086901c16177fffffffffffffffffffffffffffffffff00000000000000000000000000000000841690911c1790509392505050565b5f60086115da600260206124c7565b6115e491906124da565b9190911c919050565b6060815f0361160a575060408051602081019091525f8152611090565b5f6116158585611b5a565b9050610c27815f85611c37565b5f6008600180611634600260206124c7565b61163e91906124c7565b61164891906124c7565b61165291906124da565b8260ff911c1692915050565b5f61109061166c8484611c5a565b5490565b5f83836040516020016116849291906124f1565b604051602081830303815290604052805190602001208260f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f3b4102da22e32d82fc925482184f16c09fd4281692720b87d124aef6da48a0f118185f1c90509392505050565b8215611772576020831061171857602083048401935060208381611714576117146120c2565b0692505b82156117725760208390035f8184101561173957505f19600884021c611742565b505f19600882021c5b8554600886021b818451168219821617845250818411611763575050610f08565b50600194909401939182900391015b5b602082106117945783548152600190930192601f1990910190602001611773565b8115610f08575f5f19600884021c8251865482191691161782525050505050565b5f7f8b9d8c8b908d9affffffffffffffffffab9e9d939a8d00000000000000000000820161180357507e60030220202000000000000000000000000000000000000000000000000000919050565b6101e16118307f746273746f72650000000000000000005461626c65730000000000000000000084611caf565b60205f611be7565b7f6f74000000000000000000000000000000000000000000000000000000000000867fffff00000000000000000000000000000000000000000000000000000000000016036118c457857f8dbb3a9672eebfd3773e72dd9c102393436816d832c7ba9e1e1ac8fcadcac7a9868686866040516118b7949392919061252b565b60405180910390a261113f565b5f6118ce87611cca565b90505f5b81518110156119a0575f8282815181106118ee576118ee612184565b6020026020010151905061191a6001826affffffffffffffffffffff1916611d4f90919063ffffffff16565b15611997576040517f57066c9c000000000000000000000000000000000000000000000000000000008152606082901c906357066c9c90611969908c908c908c908c908c908c90600401612569565b5f604051808303815f87803b158015611980575f80fd5b505af1158015611992573d5f803e3d5ffd5b505050505b506001016118d2565b50867f8dbb3a9672eebfd3773e72dd9c102393436816d832c7ba9e1e1ac8fcadcac7a9878787876040516119d7949392919061252b565b60405180910390a25f6119ea8888611b5a565b90505f602087019050611a00825f895184611d6c565b5f611a0a85611622565b1115611a8a575f611a1b8a8a611c5a565b87815590506020860191505f805f5b611a3388611622565b8160ff161015611a8557611a488d8d83611670565b9250611a638a8260ff166028026038011c64ffffffffff1690565b9150611a71835f8488611d6c565b611a7b8286612496565b9450600101611a2a565b505050505b5f5b835181101561113a575f848281518110611aa857611aa8612184565b60200260200101519050611ad46002826affffffffffffffffffffff1916611d4f90919063ffffffff16565b15611b51576040517f5b28cdaf000000000000000000000000000000000000000000000000000000008152606082901c90635b28cdaf90611b23908e908e908e908e908e908e90600401612569565b5f604051808303815f87803b158015611b3a575f80fd5b505af1158015611b4c573d5f803e3d5ffd5b505050505b50600101611a8c565b5f8282604051602001611b6e9291906124f1565b60408051601f1981840301815291905280516020909101207f86425bff6b57326c7859e89024fe4f238ca327a1ae4a230180dd2f0e88aaa7d9189392505050565b5f80805b8360ff16811015611bdf57611bd560ff601b83900360080287901c1683612496565b9150600101611bb3565b509392505050565b5f60208210611c0c57602082048401935060208281611c0857611c086120c2565b0691505b508254600882021b602082900380841115611bdf576001850154600882021c82179150509392505050565b60405160208101601f19603f8484010116604052828252611bdf858585846116ee565b5f8282604051602001611c6e9291906124f1565b60408051601f1981840301815291905280516020909101207f14e2fcc58e58e68ec7edc30c8d50dccc3ce2714a623ec81f46b6a63922d76569189392505050565b60408051602081018490529081018290525f90606001611b6e565b6040805160018082528183019092526060915f91906020808301908036833701905050905082815f81518110611d0257611d02612184565b60209081029190910101525f611d397f746273746f726500000000000000000053746f7265486f6f6b730000000000008383611e27565b9050611274611d4a825f8451611e60565b611eec565b5f8160ff1682611d5f8560581c90565b1660ff1614905092915050565b8215611de45760208310611d9657602083048401935060208381611d9257611d926120c2565b0692505b8215611de45760208390035f5f19600885021c1990506008850281811c91508351811c9050811987541682821617875550818411611dd5575050610f08565b50600194909401939182900391015b5b60208210611e065780518455600190930192601f1990910190602001611de5565b8115610f08575f5f19600884021c8554835182191691161785555050505050565b6060611274611e37858585611670565b5f611e5b85611e46898961165e565b9060ff166028026038011c64ffffffffff1690565b611c37565b5f81831180611e6f5750835182115b15611eac578383836040517f23230fa300000000000000000000000000000000000000000000000000000000815260040161025f939291906125c1565b60208401611eba8482612496565b90505f611ec785856124c7565b6fffffffffffffffffffffffffffffffff1660809290921b9190911795945050505050565b60605f6110908360155f60605f611f038560801c90565b90506fffffffffffffffffffffffffffffffff85165f858281611f2857611f286120c2565b0490506040519350602084016020820281016040528185525f5b82811015611f62578451871c825293870193602090910190600101611f42565b50505050509392505050565b5f60208284031215611f7e575f80fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611090575f80fd5b803567ffffffffffffffff8116811461139b575f80fd5b5f805f805f60a08688031215611fd8575f80fd5b853594506020860135935060408601359250611ff660608701611fad565b915061200460808701611fad565b90509295509295909350565b5f805f60608486031215612022575f80fd5b61202b84611fad565b925061203960208501611fad565b915061204760408501611fad565b90509250925092565b5f805f60608486031215612062575f80fd5b8335925061207260208501611fad565b9150604084013590509250925092565b634e487b7160e01b5f52601160045260245ffd5b67ffffffffffffffff8181168382160280821691908281146120ba576120ba612082565b505092915050565b634e487b7160e01b5f52601260045260245ffd5b5f67ffffffffffffffff808416806120f0576120f06120c2565b92169190910692915050565b67ffffffffffffffff82811682821603908082111561211d5761211d612082565b5092915050565b5f67ffffffffffffffff8084168061213e5761213e6120c2565b92169190910492915050565b5f6020828403121561215a575f80fd5b81516001600160a01b0381168114611090575f80fd5b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f815180845260208085019450602084015f5b838110156121e657815180518852838101516001600160a01b03168489015260409081015190880152606090960195908201906001016121ab565b509495945050505050565b8381526001600160a01b0383166020820152606060408201525f610c276060830184612198565b5f5b8381101561223257818101518382015260200161221a565b50505f910152565b5f8151808452612251816020860160208601612218565b601f01601f19169290920160200192915050565b828152604060208201525f611274604083018461223a565b5f82601f83011261228c575f80fd5b815167ffffffffffffffff808211156122a7576122a7612170565b604051601f8301601f19908116603f011681019082821181831017156122cf576122cf612170565b816040528381528660208588010111156122e7575f80fd5b61093f846020830160208901612218565b5f60208284031215612308575f80fd5b815167ffffffffffffffff81111561231e575f80fd5b6112748482850161227d565b828152604060208201525f6112746040830184612198565b5f815180845260208085019450602084015f5b838110156121e657815187529582019590820190600101612355565b838152606060208201525f6123896060830185612342565b9050826040830152949350505050565b5f805f606084860312156123ab575f80fd5b835167ffffffffffffffff808211156123c2575f80fd5b6123ce8783880161227d565b94506020860151935060408601519150808211156123ea575f80fd5b506123f78682870161227d565b9150509250925092565b85815260a060208201525f61241960a0830187612342565b828103604084015261242b818761223a565b90508460608401528281036080840152612445818561223a565b98975050505050505050565b848152608060208201525f6124696080830186612342565b60ff949094166040830152506060015292915050565b5f6020828403121561248f575f80fd5b5051919050565b808201808211156101e1576101e1612082565b5f60ff821660ff81036124be576124be612082565b60010192915050565b818103818111156101e1576101e1612082565b80820281158282048414176101e1576101e1612082565b8281525f60208083018451602086015f5b8281101561251e57815184529284019290840190600101612502565b5091979650505050505050565b608081525f61253d6080830187612342565b828103602084015261254f818761223a565b90508460408401528281036060840152610b05818561223a565b86815260c060208201525f61258160c0830188612342565b8281036040840152612593818861223a565b905085606084015282810360808401526125ad818661223a565b9150508260a0830152979650505050505050565b606081525f6125d3606083018661223a565b6020830194909452506040015291905056fea264697066735822122001e187cca11512d96fb897fcde655c8a378090fde9ef2cea73ab6ca4d65121a064736f6c63430008180033";
        public SmartStorageUnitSystemDeploymentBase() : base(BYTECODE) { }
        public SmartStorageUnitSystemDeploymentBase(string byteCode) : base(byteCode) { }

    }

    public partial class MsgSenderFunction : MsgSenderFunctionBase { }

    [Function("test___msgSender", "address")]
    public class MsgSenderFunctionBase : FunctionMessage
    {

    }

    public partial class MsgValueFunction : MsgValueFunctionBase { }

    [Function("test___msgValue", "uint256")]
    public class MsgValueFunctionBase : FunctionMessage
    {

    }

    public partial class WorldFunction : WorldFunctionBase { }

    [Function("test___world", "address")]
    public class WorldFunctionBase : FunctionMessage
    {

    }

    public partial class CalculateOutputFunction : CalculateOutputFunctionBase { }

    [Function("test__calculateOutput", typeof(CalculateOutputOutputDTO))]
    public class CalculateOutputFunctionBase : FunctionMessage
    {
        [Parameter("uint64", "inputRatio", 1)]
        public virtual ulong InputRatio { get; set; }
        [Parameter("uint64", "outputRatio", 2)]
        public virtual ulong OutputRatio { get; set; }
        [Parameter("uint64", "inputAmount", 3)]
        public virtual ulong InputAmount { get; set; }
    }

    public partial class ExecuteFunction : ExecuteFunctionBase { }

    [Function("test__execute")]
    public class ExecuteFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "smartObjectId", 1)]
        public virtual BigInteger SmartObjectId { get; set; }
        [Parameter("uint64", "quantity", 2)]
        public virtual ulong Quantity { get; set; }
        [Parameter("uint256", "inventoryItemIdIn", 3)]
        public virtual BigInteger InventoryItemIdIn { get; set; }
    }

    public partial class SetRatioFunction : SetRatioFunctionBase { }

    [Function("test__setRatio")]
    public class SetRatioFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "smartObjectId", 1)]
        public virtual BigInteger SmartObjectId { get; set; }
        [Parameter("uint256", "inventoryItemIdIn", 2)]
        public virtual BigInteger InventoryItemIdIn { get; set; }
        [Parameter("uint256", "inventoryItemIdOut", 3)]
        public virtual BigInteger InventoryItemIdOut { get; set; }
        [Parameter("uint64", "ratioIn", 4)]
        public virtual ulong RatioIn { get; set; }
        [Parameter("uint64", "ratioOut", 5)]
        public virtual ulong RatioOut { get; set; }
    }

    public partial class SupportsInterfaceFunction : SupportsInterfaceFunctionBase { }

    [Function("test__supportsInterface", "bool")]
    public class SupportsInterfaceFunctionBase : FunctionMessage
    {
        [Parameter("bytes4", "interfaceId", 1)]
        public virtual byte[] InterfaceId { get; set; }
    }

    public partial class TestFunction : TestFunctionBase { }

    [Function("test__test", "bool")]
    public class TestFunctionBase : FunctionMessage
    {

    }

    public partial class StoreSetrecordEventDTO : StoreSetrecordEventDTOBase { }

    [Event("Store_SetRecord")]
    public class StoreSetrecordEventDTOBase : IEventDTO
    {
        [Parameter("bytes32", "tableId", 1, true)]
        public virtual byte[] TableId { get; set; }
        [Parameter("bytes32[]", "keyTuple", 2, false)]
        public virtual List<byte[]> KeyTuple { get; set; }
        [Parameter("bytes", "staticData", 3, false)]
        public virtual byte[] StaticData { get; set; }
        [Parameter("bytes32", "encodedLengths", 4, false)]
        public virtual byte[] EncodedLengths { get; set; }
        [Parameter("bytes", "dynamicData", 5, false)]
        public virtual byte[] DynamicData { get; set; }
    }

    public partial class TradeEventDTO : TradeEventDTOBase { }

    [Event("Trade")]
    public class TradeEventDTOBase : IEventDTO
    {
        [Parameter("address", "_ssuOwner", 1, true)]
        public virtual string SsuOwner { get; set; }
        [Parameter("uint256", "_ssuSmartObjectId", 2, true)]
        public virtual BigInteger SsuSmartObjectId { get; set; }
        [Parameter("uint256", "_inventoryItemIdIn", 3, false)]
        public virtual BigInteger InventoryItemIdIn { get; set; }
        [Parameter("uint64", "calculatedInput", 4, false)]
        public virtual ulong CalculatedInput { get; set; }
        [Parameter("uint256", "itemObjectIdOut", 5, false)]
        public virtual BigInteger ItemObjectIdOut { get; set; }
        [Parameter("uint64", "calculatedOutput", 6, false)]
        public virtual ulong CalculatedOutput { get; set; }
    }

    public partial class InvalidRatioError : InvalidRatioErrorBase { }

    [Error("InvalidRatio")]
    public class InvalidRatioErrorBase : IErrorDTO
    {
        [Parameter("string", "message", 1)]
        public virtual string Message { get; set; }
    }

    public partial class InventoryInvaliditemError : InventoryInvaliditemErrorBase { }

    [Error("Inventory_InvalidItem")]
    public class InventoryInvaliditemErrorBase : IErrorDTO
    {
        [Parameter("string", "message", 1)]
        public virtual string Message { get; set; }
        [Parameter("uint256", "inventoryItemId", 2)]
        public virtual BigInteger InventoryItemId { get; set; }
    }

    public partial class SliceOutofboundsError : SliceOutofboundsErrorBase { }

    [Error("Slice_OutOfBounds")]
    public class SliceOutofboundsErrorBase : IErrorDTO
    {
        [Parameter("bytes", "data", 1)]
        public virtual byte[] Data { get; set; }
        [Parameter("uint256", "start", 2)]
        public virtual BigInteger Start { get; set; }
        [Parameter("uint256", "end", 3)]
        public virtual BigInteger End { get; set; }
    }

    public partial class MsgSenderOutputDTO : MsgSenderOutputDTOBase { }

    [FunctionOutput]
    public class MsgSenderOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("address", "sender", 1)]
        public virtual string Sender { get; set; }
    }

    public partial class MsgValueOutputDTO : MsgValueOutputDTOBase { }

    [FunctionOutput]
    public class MsgValueOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "value", 1)]
        public virtual BigInteger Value { get; set; }
    }

    public partial class WorldOutputDTO : WorldOutputDTOBase { }

    [FunctionOutput]
    public class WorldOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class CalculateOutputOutputDTO : CalculateOutputOutputDTOBase { }

    [FunctionOutput]
    public class CalculateOutputOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint64", "outputAmount", 1)]
        public virtual ulong OutputAmount { get; set; }
        [Parameter("uint64", "remainingInput", 2)]
        public virtual ulong RemainingInput { get; set; }
    }

    public partial class SupportsInterfaceOutputDTO : SupportsInterfaceOutputDTOBase { }

    [FunctionOutput]
    public class SupportsInterfaceOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class TestOutputDTO : TestOutputDTOBase { }

    [FunctionOutput]
    public class TestOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }
}

